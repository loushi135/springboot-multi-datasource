buildscript {
    repositories {
        // NOTE: You should declare only repositories that you need here
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        mavenCentral()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.1.RELEASE")
        classpath "org.springframework:springloaded:1.2.8.RELEASE"
    }

}
group 'io.github.loushi135'
version '1.0.0'

apply plugin: "java"
apply plugin: "idea"
apply plugin: "maven"

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = "multi-datasource-spring-boot-starter"
}
jar.enabled = true

idea {
    module {
        downloadJavadoc = false
        downloadSources = true
    }

    from("${projectDir}") {
        include "license.txt"
        into "META-INF"
        expand(copyright: new Date().format("yyyy"), version: project.version)
    }
}
ext {
    slf4jVersion = "1.7.21"
    druidVersion = "1.1.10"
    guavaVersion = "19.0"
    springBootMybatisVersion = "1.3.2"
    logbackVersion = "1.2.3"
    mybatisPlusVersion = "3.0.6"
    apacheCommonVersion = "3.5"
    fastJsonVersion = "1.2.28"
}

repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    maven { url "http://repo.spring.io/release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
    mavenCentral()
}

dependencies {
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    compile "org.springframework.boot:spring-boot"
    compile "org.springframework.boot:spring-boot-starter"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-jdbc"
    compile "org.springframework.boot:spring-boot-starter-aop"

    compile "org.slf4j:slf4j-api:${slf4jVersion}"

    compile "com.google.guava:guava:${guavaVersion}"
    compile "com.alibaba:druid:${druidVersion}"
    compile "p6spy:p6spy:3.8.0"
    compile "org.apache.commons:commons-lang3:${apacheCommonVersion}"
    compile "com.alibaba:fastjson:${fastJsonVersion}"

    testCompile "org.mybatis.spring.boot:mybatis-spring-boot-starter:${springBootMybatisVersion}"
    testCompile "junit:junit:4.12"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.197'
    testCompile "ch.qos.logback:logback-classic:${logbackVersion}"
    testCompile "com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVersion}"

}

compileJava.dependsOn(processResources)

//上传到nexus
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "http://172.16.100.98/nexus/content/repositories/releases")
                    { authentication(userName: "admin", password: "admin123") }
            snapshotRepository(url: "http://172.16.100.98/nexus/content/repositories/snapshots")
                    { authentication(userName: "admin", password: "admin123") }
            pom.version = "$project.version"
            pom.artifactId = "multi-datasource-spring-boot-starter"
            pom.groupId = "$project.group"
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.7"
}